import{L as y,B as h,F as l,m as x,c,g as f,n as A,R as M,o as S,p as b,i as W,l as H,q as R,W as B,d as G,O as P,C as E}from"./main.3a414f1c.js";import{c as C,a as k}from"./ambient_light.21799e97.js";import{G as z,c as F}from"./lil-gui.esm.60f9455d.js";import{c as I}from"./sphere.e6af42fb.js";class T extends y{constructor(e,i){const w=[1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],n=new h;n.setAttribute("position",new l(w,3)),n.computeBoundingSphere();const u=new x({fog:!1});super(n,u),this.light=e,this.color=i,this.type="RectAreaLightHelper";const L=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],a=new h;a.setAttribute("position",new l(L,3)),a.computeBoundingSphere(),this.add(new c(a,new f({side:A,fog:!1})))}updateMatrixWorld(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),this.color!==void 0)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);const e=this.material.color,i=Math.max(e.r,e.g,e.b);i>1&&e.multiplyScalar(1/i),this.children[0].material.color.copy(this.material.color)}this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld),this.children[0].matrixWorld.copy(this.matrixWorld)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const q=()=>{const t=new M(5177088,1,3,4);t.position.set(1.5,0,1.5),t.lookAt(0,0,0);const e=new T(t);return{rectAreaLight:t,rectAreaLightHelper:e}},v=()=>{const t=new S(16777215,.7,6,Math.PI*.1,.1,1);t.position.set(0,2,3),t.target.position.x=-1;const e=new b(t,"blue");return window.requestAnimationFrame(()=>e.update()),{spotLight:t,spotLightHelper:e}},O=()=>new W({roughness:.3}),j=t=>{const e=new H(5,5),i=new c(e,t);return i.rotation.x=-Math.PI*.5,i.position.y=-.65,i},D=t=>{const e=new R(.5,.2,15,100,Math.PI*2),i=new c(e,t);return i.position.x=1.5,i},U=t=>{new z().add(t,"intensity",0,1,.001)},o=new B({alpha:!0}),r=O(),J=I(r),K=F(r),N=D(r),Q=j(r),m=[J,K,N],p=C(.5),{spotLight:d,spotLightHelper:V}=v(),{rectAreaLight:X,rectAreaLightHelper:Y}=q(),Z=G(...m,Q,p,d,d.target,V,X,Y),s=k(-2,1,4),_=new E;U(p);const g=()=>{const t=_.getElapsedTime();m.forEach(e=>[e.rotation.x,e.rotation.y]=[t*.15,t*.1]),requestAnimationFrame(g),o.render(Z,s)},$=()=>{o.setSize(window.innerWidth,window.innerHeight),o.setPixelRatio(Math.min(window.devicePixelRatio,2)),document.body.appendChild(o.domElement),new P(s,o.domElement),g()},tt=()=>{o.setSize(window.innerWidth,window.innerHeight),s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix()};window.addEventListener("load",$);window.addEventListener("resize",tt);
